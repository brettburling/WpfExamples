<Application x:Class="WpfCustomComponents.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WpfCustomComponents" 
             xmlns:sys="clr-namespace:System;assembly=System.Runtime"
             StartupUri="MainWindow.xaml">
    <Application.Resources>


        <Color x:Key="primary">#FFFFFF</Color>
        <Color x:Key="primaryVariant">#F0F0F0</Color>
        <Color x:Key="active">#E4610F</Color>
        <Color x:Key="activeVariant">#EB894B</Color>
        <Color x:Key="inactive">#868484</Color>
        <Color x:Key="menuHighlight ">#F5F5F5</Color>
        <Color x:Key="error ">#da291c</Color>


        <!--brushes-->
        <SolidColorBrush x:Key="windowBackground" Color="{StaticResource primaryVariant}"/>

        <SolidColorBrush x:Key="primaryBackground" Color="{StaticResource active}"/>
        <SolidColorBrush x:Key="primaryForeground" Color="white"/>
        <SolidColorBrush x:Key="primaryBoarder" Color="{StaticResource active}"/>

        
        <SolidColorBrush x:Key="secondaryBackground" Color="white"/>
        <SolidColorBrush x:Key="secondaryForeground" Color="{StaticResource active}"/>
        <SolidColorBrush x:Key="secondaryBoarder" Color="{StaticResource active}"/>

        
        <SolidColorBrush x:Key="veryHigh" Color="#76232f"/>
        <SolidColorBrush x:Key="high" Color="#da291c"/>
        <SolidColorBrush x:Key="medium" Color="#ffd700"/>
        <SolidColorBrush x:Key="low" Color="#509e2f"/>

        <!--fonts-->
        <FontFamily x:Key="primaryFontFamily">Arial</FontFamily>
        <sys:Double x:Key="primaryFontSize">12</sys:Double>




        
        
        
        

        <!--primary button style-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="Button.Static.Background" Color="{StaticResource active}"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="{StaticResource active}"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="{StaticResource active}"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="{StaticResource active}"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="{StaticResource active}"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="{StaticResource active}"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="{StaticResource inactive}"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="{StaticResource inactive}"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="{StaticResource primary}"/>
        
        
        <Style x:Key="PrimaryButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{StaticResource primaryForeground}"/>
            <Setter Property="BorderThickness" Value="1"/>



            
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="3">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
